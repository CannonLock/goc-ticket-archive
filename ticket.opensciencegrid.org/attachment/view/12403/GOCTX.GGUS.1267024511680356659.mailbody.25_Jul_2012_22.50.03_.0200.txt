Short description: GGUS-Ticket-ID:#84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC

Click here to view incident: INC0021697

 
Comments:
2012-07-25 13:48:26 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID:#84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:44:26 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID:#84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:40:25 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID: #84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:37:23 - Mike Stewart (Additional comments)
Shreyas,
 
A lot of these have shown up in the last few minutes.  My colleagues tell me to assign them to you.
 
What should the Resource/Category fields be?
 
Thanks,
Mike
 
2012-07-25 12:44:25 - Guest (Additional comments)
received from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
INTERNAL DIARY -> 
Added attachment mailbody.25_Jul_2012_21.41.26_.0200.txt
 
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
 
 
Ref:MSG0071575
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
2012-07-25 13:37:23 - Mike Stewart (Additional comments)
Shreyas,
 
A lot of these have shown up in the last few minutes.  My colleagues tell me to assign them to you.
 
What should the Resource/Category fields be?
 
Thanks,
Mike
 
 
 
Ref:MSG0071578
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
2012-07-25 13:40:25 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID: #84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:37:23 - Mike Stewart (Additional comments)
Shreyas,
 
A lot of these have shown up in the last few minutes.  My colleagues tell me to assign them to you.
 
What should the Resource/Category fields be?
 
Thanks,
Mike
 
2012-07-25 12:44:25 - Guest (Addit...
...
--- body truncated, see attachment mailbody.25_Jul_2012_22.46.06_.0200.txt for full text ---
 
INTERNAL DIARY -> 
----------- e-mail with large body ------ 
 
 added in total as mailbody.25_Jul_2012_22.46.06_.0200.txt 
 
 
 ------------ e-mail with large body ------
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
2012-07-25 13:44:26 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID:#84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:40:25 - Guest (Additional comments)
reply from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
PUBLIC DIARY -> 
Short description: GGUS-Ticket-ID: #84466  "IN PROGRESS"  "OSG(Prod)"  "Transfer errors from NEERSC
 
Click here to view incident: INC0021697
 
 
Comments:
2012-07-25 13:37:23 - Mike Stewart (Additional comments)
Shreyas,
 
A lot of these have shown up in the last few minutes.  My colleagues tell me to assign them to you.
 
What should the Resource/Category fields be?
 
Thanks,
Mike
 
2012-07-25 12:44:25 - Guest (Additional comments)
received from: helpdesk@ggus.org
 
GGUS ticket #84466 was updated.
 
REFERENCE LINK: https://ggus.eu/ws/ticket_info.php?ticket=84466
SUBJECT: Transfer errors from NEERSC_SCRATCHDISK
 
=====================
LATEST MODIFICATIONS: 
 
LAST MODIFIER -> NERSC Consulting & Support
 
 
INTERNAL DIARY -> 
Added attachment mailbody.25_Jul_2012_21.41.26_.0200.txt
 
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
 
 
Ref:MSG0071575
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 
2012-07-25 13:37:23 - Mike Stewart (Additional comments)
Shreyas,
 
A lot of these have shown up in the last few minutes.  My colleagues tell me to assign them to you.
 
What should the Resource/Category fields be?
 
Thanks,
Mike
 
 
 
Ref:MSG0071578
 
*********************************************************************************
 This is an automated mail. When replying don't change the subject line!
 Type your text above this box and S T R I P  P R E V I O U S  M A I L S please!!
*********************************************************************************
 
 


Ref:MSG0071592
