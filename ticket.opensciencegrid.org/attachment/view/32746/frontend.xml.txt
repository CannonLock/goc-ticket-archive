<frontend advertise_delay="5" frontend_name="FIFE-DEV-FNAL-GWMSFrontend" loop_delay="60" advertise_with_multiple="True" advertise_with_tcp="True" frontend_monitor_index_page="False" frontend_versioning="False" restart_attempts="3" restart_interval="1800">
  <log_retention>
    <process_logs>
      <process_log extension="info" max_days="999999999.0" max_mbytes="999999999.0" min_days="999999999.0" msg_types="INFO"/>
        <process_log extension="err" max_days="999999999.0" max_mbytes="999999999.0" min_days="999999999.0" msg_types="ERR,WARN,EXCEPTION"/>
    </process_logs>
  </log_retention>
  <match match_expr="True" start_expr='((MY.GLIDEIN_ToDie - MY.CurrentTime )>TARGET.JOB_EXPECTED_MAX_LIFETIME) &amp;&amp; ( (stringListsIntersect(MY.SLOT_BAD_JOBSUB_GROUPS,TARGET.Jobsub_Group,",") == FALSE) &amp;&amp; (MY.SLOT_BAD_JOBSUB_GROUPS =!= "ALL") )'>
    <factory query_expr="True">
      <match_attrs>
      </match_attrs>
    </factory>
    <job comment="Define job constraint and schedds globally for simplicity" query_expr="(JobUniverse==5)&amp;&amp;(GLIDEIN_Is_Monitor =!= TRUE)&amp;&amp;(JOB_Is_Monitor =!= TRUE)">
      <match_attrs>
      </match_attrs>
      <schedds>	
	<schedd DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-jobsub-dev01.fnal.gov" fullname="fife-jobsub-dev01.fnal.gov"/>
	<schedd DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-jobsub-dev02.fnal.gov" fullname="fife-jobsub-dev02.fnal.gov"/>
      </schedds>
    </job>
  </match>
  <monitor base_dir="/var/lib/gwms-frontend/web-area/monitor" flot_dir="/usr/share/javascriptrrd/flot" javascriptRRD_dir="/usr/share/javascriptrrd/js" jquery_dir="/usr/share/javascriptrrd/flot"/>
  <monitor_footer display_txt="" href_link=""/>
  <security classad_proxy="/var/lib/gwms-frontend-proxies/pilot_fe.fifebatch.proxy" proxy_DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=frontend_pp/fifebatch.fnal.gov" proxy_selection_plugin="ProxyAll" security_name="FIFE-ITB-FNAL" sym_key="aes_256_cbc">
	  <credentials>
            <credential absfname="/etc/grid-security/frontend/frontendcertkey.pem" keyabsfname="/etc/grid-security/frontend/frontendcertkey.pem" pilotabsfname="/var/lib/gwms-frontend-proxies/cloudpilot.proxy" security_class="frontend" trust_domain="FermiCloud" type="key_pair"/>
          </credentials>
  </security>
  <stage base_dir="/var/lib/gwms-frontend/web-area/stage" use_symlink="True" web_base_url="http://fife-gwmsfrontend-dev01.fnal.gov:8319/vofrontend/stage"/>
  <work base_dir="/var/lib/gwms-frontend/vofrontend" base_log_dir="/var/log/gwms-frontend"/>
  <attrs>
	  <attr name="GLIDECLIENT_Rank" glidein_publish="False" job_publish="False" parameter="True" type="string" value="1"/>
	  <attr name="GLIDEIN_Expose_Grid_Env" glidein_publish="True" job_publish="True" parameter="False" type="string" value="True"/>
	  <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="OPTIONAL"/>
	  <attr name="USE_MATCH_AUTH" glidein_publish="False" job_publish="False" parameter="True" type="string" value="True"/>
          <attr name="SLOTS_LAYOUT" glidein_publish="True" job_publish="True" parameter="False" type="string" value="partitionable"/>
          <attr name="MODIFY_REQUEST_EXPR_REQUESTMEMORY" glidein_publish="True" job_publish="True" parameter="False" type="expr" value="RequestMemory"/>
          <attr name="FIFE_GLIDEIN_ToDie" glidein_publish="True" job_publish="True" parameter="False" type="expr" value="$(GLIDEIN_ToDie)"/>
          <attr name="CONDOR_VERSION" glidein_publish="False" job_publish="False" parameter="True" type="string" value="8.4.2"/>
	  <attr name="TEST_FLAG" glidein_publish="True" job_publish="True" parameter="False" type="string" value="SHREYAS_NOVA_TEST"/>
  </attrs>
  <config>
         <idle_vms_total curb="5000" max="5500" />
         <idle_vms_total_global curb="6000" max="6500" />
         <running_glideins_total curb="90000" max="100000" />
         <running_glideins_total_global curb="90000" max="100000" />
  </config>
  <groups>
      <group name="GPGRID" enabled="True">
         <config>
            <idle_glideins_per_entry max="500" reserve="5"/>
            <idle_vms_per_entry curb="4500" max="5000"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="2"/>
         </config>
         <match match_expr='True' start_expr='(isUndefined(TARGET.DESIRED_USAGE_MODEL) || stringListsIntersect(toUpper(TARGET.DESIRED_USAGE_MODEL),"DEDICATED,OPPORTUNISTIC",",") &amp;&amp; ((MY.GLIDEIN_ToDie - MY.CurrentTime )>TARGET.JOB_EXPECTED_MAX_LIFETIME) &amp;&amp; ((MY.CurrentTime > 1475499600) || (1475406000 - MY.CurrentTime)>TARGET.JOB_EXPECTED_MAX_LIFETIME))'>
            <factory query_expr='(stringListIMember("Fermilab", GLIDEIN_Supported_VOs) &amp;&amp; (GLIDEIN_ResourceName =?= "GPGrid") &amp;&amp; (GLIDEIN_CPUS =?= "8"))'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
                  <match_attr name="GLIDEIN_ResourceName" type="string"/>
                  <match_attr name="GLIDEIN_CPUS" type="string"/>
               </match_attrs>
               <collectors>
                  <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=cmsgwms-factory.fnal.gov" factory_identity="gfactory@cmsgwms-factory.fnal.gov" my_identity="FIFE-ITB-FNAL@cmsgwms-factory.fnal.gov" node="cmsgwms-factory.fnal.gov"/>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/> 
               </collectors>
            </factory>
            <job query_expr='(isUndefined(DESIRED_USAGE_MODEL) || stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"DEDICATED,OPPORTUNISTIC",","))'>
               <match_attrs>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
                  <match_attr name="DesiredOS" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilotdev.fermilab.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy"/>
            </credentials>
         </security>
         <attrs>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="DEDICATED,OPPORTUNISTIC"/>
            <attr name="FIFE_DESC" glidein_publish="True" job_publish="True" parameter="True" type="string" value="NewGPGridSlot"/>
            <attr name="FIFE_SLOTTYPE" glidein_publish="True" job_publish="True" parameter="True" type="string" value="QUOTASLOT"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="OSG_fermilab" enabled="True">
         <config>
            <idle_glideins_per_entry max="100" reserve="5"/>
            <idle_vms_per_entry curb="100" max="110"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="100000"/>
         </config>
         <match match_expr='((not job.get("DESIRED_Sites")) or ((glidein["attrs"].get("GLIDEIN_Site")).lower() in (job.get("DESIRED_Sites")).lower().split(",")))' start_expr='(isUndefined(TARGET.DesiredOS) || stringListIMember(MY.IFOS_installed,TARGET.DesiredOS)) &amp;&amp; stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL) &amp;&amp; (stringListsIntersect(TARGET.AccountingGroup,"group_uboone.group_cdf",".") == FALSE)'>
            <factory query_expr='stringListIMember("FERMILAB", GLIDEIN_Supported_VOs)'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Site" type="string"/>
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
               </match_attrs>
               <collectors>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"OFFSITE",",")'>
               <match_attrs>
                  <match_attr name="DESIRED_Sites" type="string"/>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.fermilab.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy"/>
            </credentials>
         </security>
         <attrs>
            <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="NEVER"/>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="OFFSITE"/>
            <attr name="FIFE_DESC" glidein_publish="True" job_publish="True" parameter="True" type="string" value="GenericOffsite"/>
            <attr name="WHICH_GROUP" glidein_publish="True" job_publish="True" parameter="True" type="string" value="NOVA"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="OSG_minos" enabled="True">
         <config>
            <idle_glideins_per_entry max="100" reserve="5"/>
            <idle_vms_per_entry curb="100" max="110"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="100000"/>
         </config>
         <match match_expr='((not job.get("DESIRED_Sites")) or ((glidein["attrs"].get("GLIDEIN_Site")).lower() in (job.get("DESIRED_Sites")).lower().split(",")))' start_expr='stringListIMember("group_minos",TARGET.AccountingGroup,".") &amp;&amp; (isUndefined(TARGET.DesiredOS) || stringListIMember(MY.IFOS_installed,TARGET.DesiredOS)) &amp;&amp; stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)'>
            <factory query_expr='((stringListIMember("Minos", GLIDEIN_Supported_VOs)) &amp;&amp; (stringListIMember(GLIDEIN_Site, "Stampede", ",")))'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Site" type="string"/>  
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
               </match_attrs>
               <collectors>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"OFFSITE",",") &amp;&amp; stringListIMember("group_minos", AccountingGroup,".")'>
               <match_attrs>
                  <match_attr name="DESIRED_Sites" type="string"/>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.minos.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy" project_id="TG-PHY160034"/>
            </credentials>
         </security>
         <attrs>
            <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="NEVER"/>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="OFFSITE"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="OSG_nova" enabled="True">
         <config>
            <idle_glideins_per_entry max="100" reserve="5"/>
            <idle_vms_per_entry curb="100" max="110"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="100000"/>
         </config>
         <match match_expr='((not job.get("DESIRED_Sites")) or ((glidein["attrs"].get("GLIDEIN_Site")).lower() in (job.get("DESIRED_Sites")).lower().split(",")))' start_expr='stringListIMember("group_nova",TARGET.AccountingGroup,".") &amp;&amp; (isUndefined(TARGET.DesiredOS) || stringListIMember(MY.IFOS_installed,TARGET.DesiredOS)) &amp;&amp; stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)'>
            <factory query_expr='stringListIMember("Nova", GLIDEIN_Supported_VOs)'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Site" type="string"/>  
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
               </match_attrs>
               <collectors>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"OFFSITE",",") &amp;&amp; stringListIMember("group_nova", AccountingGroup,".")'>
               <match_attrs>
                  <match_attr name="DESIRED_Sites" type="string"/>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.nova.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy" project_id="PES0665"/>
            </credentials>
         </security>
         <attrs>
            <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="NEVER"/>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="OFFSITE"/>
            <attr name="WHICH_GROUP" glidein_publish="True" job_publish="True" parameter="True" type="string" value="NOVA"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="OSG_uboone" enabled="True">
         <config>
            <idle_glideins_per_entry max="100" reserve="5"/>
            <idle_vms_per_entry curb="100" max="110"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="100000"/>
         </config>
         <match match_expr='((not job.get("DESIRED_Sites")) or ((glidein["attrs"].get("GLIDEIN_Site")).lower() in (job.get("DESIRED_Sites")).lower().split(",")))' start_expr='stringListIMember("group_uboone",TARGET.AccountingGroup,".") &amp;&amp; (isUndefined(TARGET.DesiredOS) || stringListIMember(MY.IFOS_installed,TARGET.DesiredOS)) &amp;&amp; stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)'>
            <factory query_expr='((stringListIMember("Microboone", GLIDEIN_Supported_VOs)) || (stringListIMember("Fermilab", GLIDEIN_Supported_VOs)))'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Site" type="string"/>
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
               </match_attrs>
               <collectors>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"OFFSITE",",") &amp;&amp; stringListIMember("group_uboone", AccountingGroup,".")'>
               <match_attrs>
                  <match_attr name="DESIRED_Sites" type="string"/>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.uboone.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy"/>
            </credentials>
         </security>
         <attrs>
            <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="NEVER"/>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="OFFSITE"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="OSG_cdf" enabled="True">
         <config>
            <idle_glideins_per_entry max="100" reserve="5"/>
            <idle_vms_per_entry curb="100" max="110"/>
            <running_glideins_per_entry max="10000" relative_to_queue="1.0"/>
            <running_glideins_total curb="90000" max="100000"/>
         </config>
         <match match_expr='((not job.get("DESIRED_Sites")) or ((glidein["attrs"].get("GLIDEIN_Site")).lower() in (job.get("DESIRED_Sites")).lower().split(",")))' start_expr='stringListIMember("group_cdf",TARGET.AccountingGroup,".") &amp;&amp; (isUndefined(TARGET.DesiredOS) || stringListIMember(MY.IFOS_installed,TARGET.DesiredOS)) &amp;&amp; stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)'>
            <factory query_expr='(stringListIMember("CDF", GLIDEIN_Supported_VOs))'>
               <match_attrs>
                  <match_attr name="GLIDEIN_Site" type="string"/>
                  <match_attr name="GLIDEIN_Supported_VOs" type="string"/>
                  <match_attr name="EntryName" type="string"/>
               </match_attrs>
               <collectors>
                 <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=glidein-itb.grid.iu.edu" factory_identity="gfactory@glidein-itb.grid.iu.edu" my_identity="fefermifife@glidein-itb.grid.iu.edu" node="glidein-itb.grid.iu.edu"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"OFFSITE",",") &amp;&amp; stringListIMember("group_cdf", AccountingGroup,".")'>
               <match_attrs>
                  <match_attr name="DESIRED_Sites" type="string"/>
                  <match_attr name="AccountingGroup" type="string"/>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.cdf.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy"/>
            </credentials>
         </security>
         <attrs>
            <attr name="GLIDEIN_Glexec_Use" glidein_publish="True" job_publish="True" parameter="False" type="string" value="NEVER"/>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="OFFSITE"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="aws_hepcloud" enabled="True">
         <config>
            <idle_glideins_per_entry max="1000" reserve="5"/>
            <idle_vms_per_entry curb="100" max="300"/>
            <idle_vms_total curb="200" max="500"/>
            <processing_workers matchmakers="3"/>
            <running_glideins_per_entry max="12000" relative_to_queue="1.15"/>
            <running_glideins_total curb="19000" max="20000"/>
         </config>
         <match match_expr="True" start_expr="stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)">
            <factory query_expr='(GLIDEIN_ResourceName=?="FNAL_HEPCLOUD")'>
               <match_attrs>
                  <match_attr name="GLIDEIN_ResourceName" type="string"/>
               </match_attrs>
               <collectors>
                   <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=cmsgwms-factory.fnal.gov" factory_identity="gfactory@cmsgwms-factory.fnal.gov" my_identity="FIFE-ITB-FNAL@cmsgwms-factory.fnal.gov" node="cmsgwms-factory.fnal.gov"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"AWS_HEPCLOUD",",")'>
               <match_attrs>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
               <credential absfname="/var/lib/gwms-frontend-proxies/pilot.nova.proxy" security_class="frontend" trust_domain="grid" type="grid_proxy"/>
            </credentials>
         </security>
         <attrs>
            <attr name="HAS_USAGE_MODEL" glidein_publish="True" job_publish="True" parameter="True" type="string" value="AWS_HEPCLOUD"/>
         </attrs>
         <files>
         </files>
      </group>
      <group name="fermicloud_priv" enabled="True">
         <config>
            <idle_glideins_per_entry max="5" reserve="5"/>
            <idle_vms_per_entry curb="5" max="5"/>
            <running_glideins_per_entry max="100" relative_to_queue="1.0"/>
            <running_glideins_total curb="50" max="100"/>
         </config>
         <match match_expr='glidein["attrs"].get("HAS_USAGE_MODEL") in job.get("DESIRED_USAGE_MODEL").split(",")' start_expr='stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL) &amp;&amp; (TARGET.jobsub_group == "nova")'>
            <factory query_expr='(HAS_USAGE_MODEL=?="FERMICLOUD_PRIV")'>
               <match_attrs>
                  <match_attr name="HAS_USAGE_MODEL" type="string"/>
               </match_attrs>
               <collectors>
                  <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=cmsgwms-factory.fnal.gov" factory_identity="gfactory@cmsgwms-factory.fnal.gov" my_identity="FIFE-ITB-FNAL@cmsgwms-factory.fnal.gov" node="cmsgwms-factory.fnal.gov"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"FERMICLOUD_PRIV",",") &amp;&amp; jobsub_group == "nova"'>
               <match_attrs>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
            </credentials>
         </security>
         <attrs>
         </attrs>
         <files>
         </files>
      </group>
      <group name="fermicloud" enabled="True">
         <config>
            <idle_glideins_per_entry max="5" reserve="5"/>
            <idle_vms_per_entry curb="5" max="5"/>
            <running_glideins_per_entry max="100" relative_to_queue="1.0"/>
            <running_glideins_total curb="50" max="100"/>
         </config>
         <match match_expr='glidein["attrs"].get("HAS_USAGE_MODEL") in job.get("DESIRED_USAGE_MODEL").split(",")' start_expr="stringListIMember(MY.HAS_USAGE_MODEL,TARGET.DESIRED_USAGE_MODEL)">
            <factory query_expr='(HAS_USAGE_MODEL=?="FERMICLOUD")'>
               <match_attrs>
                  <match_attr name="HAS_USAGE_MODEL" type="string"/>
               </match_attrs>
               <collectors>
                  <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=cmsgwms-factory.fnal.gov" factory_identity="gfactory@cmsgwms-factory.fnal.gov" my_identity="FIFE-ITB-FNAL@cmsgwms-factory.fnal.gov" node="cmsgwms-factory.fnal.gov"/>
               </collectors>
            </factory>
            <job query_expr='DESIRED_USAGE_MODEL =!= NULL &amp;&amp; stringListsIntersect(toUpper(DESIRED_USAGE_MODEL),"FERMICLOUD",",")'>
               <match_attrs>
                  <match_attr name="DESIRED_USAGE_MODEL" type="string"/>
               </match_attrs>
               <schedds>
               </schedds>
            </job>
         </match>
         <security>
            <credentials>
            </credentials>
         </security>
         <attrs>
         </attrs>
         <files>
         </files>
      </group>
   </groups>
   <collectors>
	<collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-uc-dev01.fnal.gov" group="default" node="fife-uc-dev01.fnal.gov:9618" secondary="False"/>
        <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-uc-dev01.fnal.gov" group="default" node="fife-uc-dev01.fnal.gov:9620-9660" secondary="True"/>
	<collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-uc-dev02.fnal.gov" group="second" node="fife-uc-dev02.fnal.gov:9618" secondary="False"/>
        <collector DN="/DC=org/DC=opensciencegrid/O=Open Science Grid/OU=Services/CN=fife-uc-dev02.fnal.gov" group="second" node="fife-uc-dev02.fnal.gov:9620-9660" secondary="True"/>
   </collectors>
   <files>
     <file absfname="/var/lib/gwms-frontend-scripts/advertise_os.sh" 
           after_entry="True" 
           after_group="False" 
           const="True" 
           executable="True" 
           untar="False" 
           wrapper="False">
     <untar_options cond_attr="TRUE"/>
     </file>
     <file absfname="/var/lib/gwms-frontend-scripts/IFFE_script.sh" 
           after_entry="True" 
           after_group="False" 
           const="True" 
           executable="True" 
           untar="False" 
           wrapper="False">
     <untar_options cond_attr="TRUE"/>
     </file>
     <file absfname="/var/lib/gwms-frontend-scripts/check_osgstorage_org.sh" 
           after_entry="True" 
           after_group="False" 
           const="True" 
           executable="True" 
           untar="False" 
           wrapper="False">
     <untar_options cond_attr="TRUE"/>
     </file>
     <file absfname="/var/lib/gwms-frontend-scripts/blacklist.sh"
           after_entry="True"
           after_group="False"
           const="True"
           executable="True"
           untar="False"
           wrapper="False">
     <untar_options cond_attr="TRUE"/>
     </file>
     <file absfname="/var/lib/gwms-frontend-scripts/user_dir_chmod.sh"
           after_entry="True"
           after_group="True"
           const="True"
           executable="True"
           period="300"
           untar="False"
           wrapper="False">
     <untar_options cond_attr="TRUE"/>
     </file>
   </files>
</frontend>
